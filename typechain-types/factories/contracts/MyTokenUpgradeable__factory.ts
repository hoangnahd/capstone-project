/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MyTokenUpgradeable,
  MyTokenUpgradeableInterface,
} from "../../contracts/MyTokenUpgradeable";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100d4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d15780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6080516114286100fd600039600081816108d8015281816109010152610a4201526114286000f3fe6080604052600436106101095760003560e01c806370a0823111610095578063a9059cbb11610064578063a9059cbb146102de578063ad3cb1cc146102fe578063dd62ed3e1461032f578063f2fde38b1461034f578063f8b2cb4f1461036f57600080fd5b806370a082311461024d578063715018a61461026d5780638da5cb5b1461028257806395d89b41146102c957600080fd5b8063313ce567116100dc578063313ce567146101c757806340c10f19146101e35780634cd88b76146102055780634f1ef2861461022557806352d1902d1461023857600080fd5b806306fdde031461010e578063095ea7b31461013957806318160ddd1461016957806323b872dd146101a7575b600080fd5b34801561011a57600080fd5b5061012361038f565b6040516101309190610fa7565b60405180910390f35b34801561014557600080fd5b50610159610154366004610ff6565b610452565b6040519015158152602001610130565b34801561017557600080fd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b604051908152602001610130565b3480156101b357600080fd5b506101596101c2366004611020565b61046c565b3480156101d357600080fd5b5060405160128152602001610130565b3480156101ef57600080fd5b506102036101fe366004610ff6565b610492565b005b34801561021157600080fd5b5061020361022036600461110d565b6104a8565b610203610233366004611176565b6105b7565b34801561024457600080fd5b506101996105d2565b34801561025957600080fd5b506101996102683660046111ce565b6105ef565b34801561027957600080fd5b50610203610617565b34801561028e57600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b039091168152602001610130565b3480156102d557600080fd5b5061012361062b565b3480156102ea57600080fd5b506101596102f9366004610ff6565b61066a565b34801561030a57600080fd5b50610123604051806040016040528060058152602001640352e302e360dc1b81525081565b34801561033b57600080fd5b5061019961034a3660046111e9565b610678565b34801561035b57600080fd5b5061020361036a3660046111ce565b6106c2565b34801561037b57600080fd5b5061019961038a3660046111ce565b610705565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060916000805160206113b3833981519152916103ce9061121c565b80601f01602080910402602001604051908101604052809291908181526020018280546103fa9061121c565b80156104475780601f1061041c57610100808354040283529160200191610447565b820191906000526020600020905b81548152906001019060200180831161042a57829003601f168201915b505050505091505090565b600033610460818585610710565b60019150505b92915050565b60003361047a858285610722565b610485858585610789565b60019150505b9392505050565b61049a6107e8565b6104a48282610843565b5050565b60006104b2610879565b805490915060ff600160401b820416159067ffffffffffffffff166000811580156104da5750825b905060008267ffffffffffffffff1660011480156104f75750303b155b905081158015610505575080155b156105235760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561054d57845460ff60401b1916600160401b1785555b61055787876108a2565b610560336108b4565b6105686108c5565b83156105ae57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b6105bf6108cd565b6105c882610972565b6104a4828261097a565b60006105dc610a37565b506000805160206113d383398151915290565b6001600160a01b031660009081526000805160206113b3833981519152602052604090205490565b61061f6107e8565b6106296000610a80565b565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060916000805160206113b3833981519152916103ce9061121c565b600033610460818585610789565b6001600160a01b0391821660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b6106ca6107e8565b6001600160a01b0381166106f957604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61070281610a80565b50565b6000610466826105ef565b61071d8383836001610af1565b505050565b600061072e8484610678565b9050600019811015610783578181101561077457604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016106f0565b61078384848484036000610af1565b50505050565b6001600160a01b0383166107b357604051634b637e8f60e11b8152600060048201526024016106f0565b6001600160a01b0382166107dd5760405163ec442f0560e01b8152600060048201526024016106f0565b61071d838383610bd9565b3361081a7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146106295760405163118cdaa760e01b81523360048201526024016106f0565b6001600160a01b03821661086d5760405163ec442f0560e01b8152600060048201526024016106f0565b6104a460008383610bd9565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610466565b6108aa610d17565b6104a48282610d3c565b6108bc610d17565b61070281610d8d565b610629610d17565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061095457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166109486000805160206113d3833981519152546001600160a01b031690565b6001600160a01b031614155b156106295760405163703e46dd60e11b815260040160405180910390fd5b6107026107e8565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156109d4575060408051601f3d908101601f191682019092526109d191810190611256565b60015b6109fc57604051634c9c8ce360e01b81526001600160a01b03831660048201526024016106f0565b6000805160206113d38339815191528114610a2d57604051632a87526960e21b8152600481018290526024016106f0565b61071d8383610d95565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106295760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6000805160206113b38339815191526001600160a01b038516610b2a5760405163e602df0560e01b8152600060048201526024016106f0565b6001600160a01b038416610b5457604051634a1406b160e11b8152600060048201526024016106f0565b6001600160a01b03808616600090815260018301602090815260408083209388168352929052208390558115610bd257836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051610bc991815260200190565b60405180910390a35b5050505050565b6000805160206113b38339815191526001600160a01b038416610c155781816002016000828254610c0a919061126f565b90915550610c879050565b6001600160a01b03841660009081526020829052604090205482811015610c685760405163391434e360e21b81526001600160a01b038616600482015260248101829052604481018490526064016106f0565b6001600160a01b03851660009081526020839052604090209083900390555b6001600160a01b038316610ca5576002810180548390039055610cc4565b6001600160a01b03831660009081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d0991815260200190565b60405180910390a350505050565b610d1f610deb565b61062957604051631afcd79f60e31b815260040160405180910390fd5b610d44610d17565b6000805160206113b38339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03610d7e84826112d7565b506004810161078383826112d7565b6106ca610d17565b610d9e82610e05565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115610de35761071d8282610e6a565b6104a4610ee0565b6000610df5610879565b54600160401b900460ff16919050565b806001600160a01b03163b600003610e3b57604051634c9c8ce360e01b81526001600160a01b03821660048201526024016106f0565b6000805160206113d383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b031684604051610e879190611396565b600060405180830381855af49150503d8060008114610ec2576040519150601f19603f3d011682016040523d82523d6000602084013e610ec7565b606091505b5091509150610ed7858383610eff565b95945050505050565b34156106295760405163b398979f60e01b815260040160405180910390fd5b606082610f1457610f0f82610f5b565b61048b565b8151158015610f2b57506001600160a01b0384163b155b15610f5457604051639996b31560e01b81526001600160a01b03851660048201526024016106f0565b508061048b565b805115610f6a57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b60005b83811015610f9e578181015183820152602001610f86565b50506000910152565b6020815260008251806020840152610fc6816040850160208701610f83565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610ff157600080fd5b919050565b6000806040838503121561100957600080fd5b61101283610fda565b946020939093013593505050565b60008060006060848603121561103557600080fd5b61103e84610fda565b925061104c60208501610fda565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff84111561108e5761108e61105d565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff821117156110bd576110bd61105d565b6040528381529050808284018510156110d557600080fd5b83836020830137600060208583010152509392505050565b600082601f8301126110fe57600080fd5b61048b83833560208501611073565b6000806040838503121561112057600080fd5b823567ffffffffffffffff81111561113757600080fd5b611143858286016110ed565b925050602083013567ffffffffffffffff81111561116057600080fd5b61116c858286016110ed565b9150509250929050565b6000806040838503121561118957600080fd5b61119283610fda565b9150602083013567ffffffffffffffff8111156111ae57600080fd5b8301601f810185136111bf57600080fd5b61116c85823560208401611073565b6000602082840312156111e057600080fd5b61048b82610fda565b600080604083850312156111fc57600080fd5b61120583610fda565b915061121360208401610fda565b90509250929050565b600181811c9082168061123057607f821691505b60208210810361125057634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561126857600080fd5b5051919050565b8082018082111561046657634e487b7160e01b600052601160045260246000fd5b601f82111561071d57806000526020600020601f840160051c810160208510156112b75750805b601f840160051c820191505b81811015610bd257600081556001016112c3565b815167ffffffffffffffff8111156112f1576112f161105d565b611305816112ff845461121c565b84611290565b6020601f82116001811461133957600083156113215750848201515b600019600385901b1c1916600184901b178455610bd2565b600084815260208120601f198516915b828110156113695787850151825560209485019460019092019101611349565b50848210156113875786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b600082516113a8818460208701610f83565b919091019291505056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220c814ed9cbfb3fa694cd2428645a1cd54627d7b3fe9a9449b01060d4f282519f364736f6c634300081c0033";

type MyTokenUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyTokenUpgradeable__factory extends ContractFactory {
  constructor(...args: MyTokenUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MyTokenUpgradeable & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyTokenUpgradeable__factory {
    return super.connect(runner) as MyTokenUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenUpgradeableInterface {
    return new Interface(_abi) as MyTokenUpgradeableInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MyTokenUpgradeable {
    return new Contract(address, _abi, runner) as unknown as MyTokenUpgradeable;
  }
}
